#!/usr/bin/perl

use Data::Dumper;

use strict;

my %escapes;
for (0..255)
{
    $escapes{chr($_)} = sprintf("%%%02X", $_);
}
$escapes{' '} = '+';

sub urlencode
{
    my $url = shift;

    $url =~ s/([^A-Za-z0-9\-_.!~*\'()])/$escapes{$1}/ge if defined $url;
    return $url;
}


# magic - do not change
print "Content-type: text/html\n\n";
my $page = $ENV{QUERY_STRING} || shift || 1;
# end magic

$page =~ s/\+/ /g;
$page =~ s/q=//;

my $cat;
my $orig_page = $page;
if ( $page =~ /^(.*)(?::|%3A)([a-z]+)(.*)$/i )
{
	$page = "$1 $3";
	$cat = $2;
}
$orig_page =~ s/%3A/:/g;

print <<EOF
<html>
<head>
<title>Harvix | Search</title>
</head>
<body>

EOF
;


#print "query = $page<br>\n";
#print "cat = $cat<br>\n";

#start args

use Yahoo::Search;

my @Results = Yahoo::Search->Results(Doc => $page,
                                      AppId => "YahooDemo",
                                      # The following args are optional.
                                      # (Values shown are package defaults).
                                      Mode         => 'all', # all words
                                      Start        => 0,
                                      Count        => 100,
                                      Type         => 'any', # all types
                                      AllowAdult   => 0, # no porn, please
                                      AllowSimilar => 0, # no dups, please
                                      Language     => undef,
                                     );
 warn $@ if $@; # report any errors

 my @Images = Yahoo::Search->Results(Image => $page,
                                      AppId => "YahooDemo",
                                      Count        => 10,
                                     );
 warn $@ if $@; # report any errors

my @dym = Yahoo::Search->Results( Spell => $page, AppId => "YahooDemo" );
if ( scalar @dym > 0 )
{
	my $res = shift @dym;
	my $qq = $res->Term;
	$qq =~ s/ /+/g;
	print "Did you mean: <a href=\"/y1search.cgi?q=$qq\">", $res->Term, "</a> ?<p>\n";
}



#end args


#Resualts statments

#print "results = ", scalar(@Images), "<p>\n";

print "<ol>\n";
show_results(3);
print "<p><hr><p>\n";
print" <a href=\"ysearch.cgi\">Image Reuslts For: $page</a>\n";
print"<p>";
show_images(2);
print"<p>";
show_images(2);
show_results(20);
print "</ol>\n";


print" \n";



sub show_images
{
	my ( $howmany ) = @_;

	$howmany = 10 if $howmany < 1;

	while ( $howmany > 0 && @Images )
	{
		my $Result = shift @Images;
		$howmany--;

		my $thumbnail = $Result->{Thumbnail}->{Url};
		my $width = $Result->{Thumbnail}->{Width};
		my $height = $Result->{Thumbnail}->{Height};
		my $url = $Result->Url;

		#print "<a href=\"$url\"><img src=\"$thumbnail\" width=$width height=$height></a>\n";
		print "<a href=\"$url\"><img src=\"$thumbnail\" height=100></a>\n";
		print "\n";
        }
}


sub show_results
{
        my ( $howmany ) = @_;

        $howmany = 10 if $howmany < 1;

        while ( $howmany > 0 && @Results )
        {
                my $Result = shift @Results;
                $howmany--;

		if ( $cat ne '' )
		{
			if ( $cat eq 'tech' )
			{
				return if $Result->Url !~ /\b(techcrunch|gigaom|pcmag|cnet)\b/;
			}
		}


		print"<hr></hr>";

		print "<p>\n";
		print" <div>";
		print "<p>\n";
	print"<li>";       
	 print "<a href=", '"', $Result->Url, '">', $Result->Title, "</a><br>\n";
	

		print $Result->Summary, "<br>\n";
	print $Result->Url, "<br>\n";


	my $etitle = $Result->Title;
	my $eurl = urlencode( $Result->Url );

	my $title = $Result->Title;
	my $url = $Result->Url;

	     print "\n";
		print" </div>";
	}
}



